{"ast":null,"code":"import logo from\"./logo.svg\";import Header from\"./components/Header\";import Tasks from\"./components/Tasks\";import Temp1 from\"./components/Temp1\";import{useState,useEffect}from\"react\";import AddTask from\"./components/AddTask\";import\"./App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){useEffect(()=>{console.log(\"hello\");});const[showAddTask,setShowAddTask]=useState(false);const[tasks,setTasks]=useState([{id:1,text:\"School appointment\",day:\"November 10 at 1pm\",reminder:true},{id:2,text:\"GYM\",day:\"November 15 at 10pm\",reminder:false},{id:3,text:\"Meeting\",day:\"December 10 at 3 pm\",reminder:true}]);// to make state variable global and transerferable to ANY component we put them in App.js...\n// tasks is now a state variable with initial value set to an array []... and we can use setTasks to change the state of tasks -VA\nconst deleteTask=id=>{// console.log(\"delete\", id);\n// filter funciton will filter all the tasks...leaving out the task with the id.. given in paramter...\nsetTasks(tasks.filter(task=>task.id!=id));};const toggleReminder=id=>{// console.log(\"hello\", id);\nsetTasks(tasks.map(task=>task.id===id?{...task,reminder:!task.reminder}:task));};const addTask=task=>{// console.log(task);\nconst id=Math.floor(Math.random()*10000)+1;const newTask={id,...task};setTasks([...tasks,newTask]);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{onAdd:()=>setShowAddTask(!showAddTask),showAdd:showAddTask}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:deleteTask,onToggle:toggleReminder}):\"No tasks to show\",showAddTask&&/*#__PURE__*/_jsx(AddTask,{onAdd:addTask})]});}export default App;// Deploy this applicaiton!","map":{"version":3,"names":["logo","Header","Tasks","Temp1","useState","useEffect","AddTask","jsx","_jsx","jsxs","_jsxs","App","console","log","showAddTask","setShowAddTask","tasks","setTasks","id","text","day","reminder","deleteTask","filter","task","toggleReminder","map","addTask","Math","floor","random","newTask","className","children","onAdd","showAdd","length","onDelete","onToggle"],"sources":["C:/Users/noman/OneDrive - Keyin College/Fall2023/ProgrammingJavaScript/Lectures/Week10/tasktracker/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport Temp1 from \"./components/Temp1\";\nimport { useState, useEffect } from \"react\";\nimport AddTask from \"./components/AddTask\";\nimport \"./App.css\";\n\nfunction App() {\n  useEffect(() => {\n    console.log(\"hello\");\n  });\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"School appointment\",\n      day: \"November 10 at 1pm\",\n      reminder: true,\n    },\n    { id: 2, text: \"GYM\", day: \"November 15 at 10pm\", reminder: false },\n    { id: 3, text: \"Meeting\", day: \"December 10 at 3 pm\", reminder: true },\n  ]);\n  // to make state variable global and transerferable to ANY component we put them in App.js...\n  // tasks is now a state variable with initial value set to an array []... and we can use setTasks to change the state of tasks -VA\n\n  const deleteTask = (id) => {\n    // console.log(\"delete\", id);\n    // filter funciton will filter all the tasks...leaving out the task with the id.. given in paramter...\n    setTasks(tasks.filter((task) => task.id != id));\n  };\n\n  const toggleReminder = (id) => {\n    // console.log(\"hello\", id);\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  const addTask = (task) => {\n    // console.log(task);\n\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No tasks to show\"\n      )}\n\n      {showAddTask && <AddTask onAdd={addTask} />}\n\n      {/* <Temp1 /> */}\n    </div>\n  );\n}\n\nexport default App;\n\n// Deploy this applicaiton!\n"],"mappings":"AAAA,MAAO,CAAAA,IAAI,KAAM,YAAY,CAC7B,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACbN,SAAS,CAAC,IAAM,CACdO,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,CACtB,CAAC,CAAC,CACF,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,CACjC,CACEc,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,oBAAoB,CAC1BC,GAAG,CAAE,oBAAoB,CACzBC,QAAQ,CAAE,IACZ,CAAC,CACD,CAAEH,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,KAAK,CAAEC,GAAG,CAAE,qBAAqB,CAAEC,QAAQ,CAAE,KAAM,CAAC,CACnE,CAAEH,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,SAAS,CAAEC,GAAG,CAAE,qBAAqB,CAAEC,QAAQ,CAAE,IAAK,CAAC,CACvE,CAAC,CACF;AACA;AAEA,KAAM,CAAAC,UAAU,CAAIJ,EAAE,EAAK,CACzB;AACA;AACAD,QAAQ,CAACD,KAAK,CAACO,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACN,EAAE,EAAIA,EAAE,CAAC,CAAC,CACjD,CAAC,CAED,KAAM,CAAAO,cAAc,CAAIP,EAAE,EAAK,CAC7B;AACAD,QAAQ,CACND,KAAK,CAACU,GAAG,CAAEF,IAAI,EACbA,IAAI,CAACN,EAAE,GAAKA,EAAE,CAAG,CAAE,GAAGM,IAAI,CAAEH,QAAQ,CAAE,CAACG,IAAI,CAACH,QAAS,CAAC,CAAGG,IAC3D,CACF,CAAC,CACH,CAAC,CAED,KAAM,CAAAG,OAAO,CAAIH,IAAI,EAAK,CACxB;AAEA,KAAM,CAAAN,EAAE,CAAGU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,KAAK,CAAC,CAAG,CAAC,CAChD,KAAM,CAAAC,OAAO,CAAG,CAAEb,EAAE,CAAE,GAAGM,IAAK,CAAC,CAC/BP,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAEe,OAAO,CAAC,CAAC,CAC/B,CAAC,CAED,mBACErB,KAAA,QAAKsB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBzB,IAAA,CAACP,MAAM,EACLiC,KAAK,CAAEA,CAAA,GAAMnB,cAAc,CAAC,CAACD,WAAW,CAAE,CAC1CqB,OAAO,CAAErB,WAAY,CACtB,CAAC,CACDE,KAAK,CAACoB,MAAM,CAAG,CAAC,cACf5B,IAAA,CAACN,KAAK,EAACc,KAAK,CAAEA,KAAM,CAACqB,QAAQ,CAAEf,UAAW,CAACgB,QAAQ,CAAEb,cAAe,CAAE,CAAC,CAEvE,kBACD,CAEAX,WAAW,eAAIN,IAAA,CAACF,OAAO,EAAC4B,KAAK,CAAEP,OAAQ,CAAE,CAAC,EAGxC,CAAC,CAEV,CAEA,cAAe,CAAAhB,GAAG,CAElB"},"metadata":{},"sourceType":"module","externalDependencies":[]}