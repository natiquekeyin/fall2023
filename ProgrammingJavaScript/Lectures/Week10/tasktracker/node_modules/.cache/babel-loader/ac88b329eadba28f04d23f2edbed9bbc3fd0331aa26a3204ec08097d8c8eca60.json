{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noman\\\\OneDrive - Keyin College\\\\Fall2023\\\\ProgrammingJavaScript\\\\Lectures\\\\Week10\\\\tasktracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport Temp1 from \"./components/Temp1\";\nimport { useState, useEffect } from \"react\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  // for fetching tasks ...\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n    // console.log(data);\n    return data;\n  };\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  // to make state variable global and transerferable to ANY component we put them in App.js...\n  // tasks is now a state variable with initial value set to an array []... and we can use setTasks to change the state of tasks -VA\n\n  const deleteTask = async id => {\n    // console.log(\"delete\", id);\n    // filter funciton will filter all the tasks...leaving out the task with the id.. given in paramter...\n    // setTasks(tasks.filter((task) => task.id != id));\n\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\"\n    });\n    setTasks(tasks.filter(task => task.id != id));\n  };\n  const toggleReminder = async id => {\n    // console.log(\"hello\", id);\n\n    const taskToToggle = await fetchTask(id);\n    const updTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    });\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n  const addTask = async task => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    // console.log(task);\n    setTasks([...tasks, data]);\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onToggle: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : \"No tasks to show\", showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x08JOSQsP4nWx2AVZdm98TuUxaM=\");\n_c = App;\nexport default App;\n\n// Deploy this applicaiton!\n// setting up a server.. by using \"serve\"\n// JSON Server..\n// API has different DELETE.. POST(inserting new), PUT(updates...)\n\n// React Router DOM:for making routes and links in react applications\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Header","Tasks","Temp1","useState","useEffect","AddTask","Footer","About","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","App","_s","getTasks","tasksFromServer","fetchTasks","setTasks","res","fetch","data","json","fetchTask","id","showAddTask","setShowAddTask","tasks","deleteTask","method","filter","task","toggleReminder","taskToToggle","updTask","reminder","headers","body","JSON","stringify","map","addTask","children","className","onAdd","showAdd","fileName","_jsxFileName","lineNumber","columnNumber","length","onDelete","onToggle","path","element","_c","$RefreshReg$"],"sources":["C:/Users/noman/OneDrive - Keyin College/Fall2023/ProgrammingJavaScript/Lectures/Week10/tasktracker/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport Temp1 from \"./components/Temp1\";\nimport { useState, useEffect } from \"react\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  // for fetching tasks ...\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n    // console.log(data);\n    return data;\n  };\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  // to make state variable global and transerferable to ANY component we put them in App.js...\n  // tasks is now a state variable with initial value set to an array []... and we can use setTasks to change the state of tasks -VA\n\n  const deleteTask = async (id) => {\n    // console.log(\"delete\", id);\n    // filter funciton will filter all the tasks...leaving out the task with the id.. given in paramter...\n    // setTasks(tasks.filter((task) => task.id != id));\n\n    await fetch(`http://localhost:5000/tasks/${id}`, { method: \"DELETE\" });\n\n    setTasks(tasks.filter((task) => task.id != id));\n  };\n\n  const toggleReminder = async (id) => {\n    // console.log(\"hello\", id);\n\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n    // console.log(task);\n    setTasks([...tasks, data]);\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        {tasks.length > 0 ? (\n          <Tasks\n            tasks={tasks}\n            onDelete={deleteTask}\n            onToggle={toggleReminder}\n          />\n        ) : (\n          \"No tasks to show\"\n        )}\n\n        {showAddTask && <AddTask onAdd={addTask} />}\n\n        <Routes>\n          <Route path=\"/\" element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n// Deploy this applicaiton!\n// setting up a server.. by using \"serve\"\n// JSON Server..\n// API has different DELETE.. POST(inserting new), PUT(updates...)\n\n// React Router DOM:for making routes and links in react applications\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbX,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,eAAe,GAAG,MAAMC,UAAU,CAAC,CAAC;MAC1CC,QAAQ,CAACF,eAAe,CAAC;IAC3B,CAAC;IAEDD,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;IACtD,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7B;IACA,OAAOD,IAAI;EACb,CAAC;EAED,MAAME,SAAS,GAAG,MAAOC,EAAE,IAAK;IAC9B,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8BI,EAAG,EAAC,CAAC;IAC5D,MAAMH,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7B,OAAOD,IAAI;EACb,CAAC;EAED,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACyB,KAAK,EAAET,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA;;EAEA,MAAM0B,UAAU,GAAG,MAAOJ,EAAE,IAAK;IAC/B;IACA;IACA;;IAEA,MAAMJ,KAAK,CAAE,+BAA8BI,EAAG,EAAC,EAAE;MAAEK,MAAM,EAAE;IAAS,CAAC,CAAC;IAEtEX,QAAQ,CAACS,KAAK,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACP,EAAE,IAAIA,EAAE,CAAC,CAAC;EACjD,CAAC;EAED,MAAMQ,cAAc,GAAG,MAAOR,EAAE,IAAK;IACnC;;IAEA,MAAMS,YAAY,GAAG,MAAMV,SAAS,CAACC,EAAE,CAAC;IACxC,MAAMU,OAAO,GAAG;MAAE,GAAGD,YAAY;MAAEE,QAAQ,EAAE,CAACF,YAAY,CAACE;IAAS,CAAC;IAErE,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8BI,EAAG,EAAC,EAAE;MAC3DK,MAAM,EAAE,KAAK;MACbO,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC;IAEFhB,QAAQ,CACNS,KAAK,CAACa,GAAG,CAAET,IAAI,IACbA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGO,IAAI;MAAEI,QAAQ,EAAE,CAACJ,IAAI,CAACI;IAAS,CAAC,GAAGJ,IAC3D,CACF,CAAC;EACH,CAAC;EAED,MAAMU,OAAO,GAAG,MAAOV,IAAI,IAAK;IAC9B,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACrDS,MAAM,EAAE,MAAM;MACdO,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;IAC3B,CAAC,CAAC;IAEF,MAAMV,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7B;IACAJ,QAAQ,CAAC,CAAC,GAAGS,KAAK,EAAEN,IAAI,CAAC,CAAC;IAC1B;IACA;IACA;EACF,CAAC;;EAED,oBACET,OAAA,CAACJ,MAAM;IAAAkC,QAAA,eACL9B,OAAA;MAAK+B,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxB9B,OAAA,CAACb,MAAM;QACL6C,KAAK,EAAEA,CAAA,KAAMlB,cAAc,CAAC,CAACD,WAAW,CAAE;QAC1CoB,OAAO,EAAEpB;MAAY;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,EACDtB,KAAK,CAACuB,MAAM,GAAG,CAAC,gBACftC,OAAA,CAACZ,KAAK;QACJ2B,KAAK,EAAEA,KAAM;QACbwB,QAAQ,EAAEvB,UAAW;QACrBwB,QAAQ,EAAEpB;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,GAEF,kBACD,EAEAxB,WAAW,iBAAIb,OAAA,CAACR,OAAO;QAACwC,KAAK,EAAEH;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE3CrC,OAAA,CAACH,MAAM;QAAAiC,QAAA,eACL9B,OAAA,CAACF,KAAK;UAAC2C,IAAI,EAAC,GAAG;UAACC,OAAO,eAAE1C,OAAA,CAACN,KAAK;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACTrC,OAAA,CAACP,MAAM;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACnC,EAAA,CAtGQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AAwGZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;;AAEA;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}