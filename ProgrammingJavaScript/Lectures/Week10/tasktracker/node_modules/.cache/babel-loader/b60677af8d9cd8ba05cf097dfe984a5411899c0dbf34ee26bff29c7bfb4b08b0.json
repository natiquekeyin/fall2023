{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noman\\\\OneDrive - Keyin College\\\\Fall2023\\\\ProgrammingJavaScript\\\\Lectures\\\\Week10\\\\tasktracker\\\\src\\\\components\\\\Temp1.jsx\",\n  _s = $RefreshSig$();\n// Hooks!\n// Hooks represent the state of a component...what are the values in a particular component at a particular time.\n// 1. useState() hook...\n\n// import { useState } from \"react\";\n\n// const Temp1 = () => {\n//   const [x, setX] = useState(\"Keyin\");\n//   const [num, setNum] = useState(0);\n\n//   return (\n//     <div>\n//       <h1>{x}</h1>\n//       <h1>{num}</h1>\n//       <button\n//         onClick={() => {\n//           setX(\"College\");\n\n//           setNum(num + 5);\n//         }}\n//       >\n//         Change\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default Temp1;\n\n// const Temp1 = () => {\n//   const [name, setName] = useState(\"Alan Smith\");\n\n//   let changeState = () => {\n//     setName(\"Bob Smith\");\n//   };\n//   return (\n//     <div>\n//       <h1>{name}</h1>\n//       <button onClick={changeState}>Update</button>\n//     </div>\n//   );\n// };\n\n// export default Temp1;\n\n// const Temp1 = () => {\n//   const obj = {\n//     name: \"Alan Smith\",\n//     age: 29,\n//     height: 5.33,\n//     isYoung: true,\n//   };\n\n// let changeState = () => {\n//   setPerson({\n//     name: \"Bob Smith\",\n//     age: 45,\n//     height: 5.4,\n//     isYoung: false,\n//   });\n// };\n\n// let changeState = () => {\n//   setPerson({\n//     name: \"Bob Smith\",\n//   });\n// };\n\n//   let changeState = () => {\n//     setPerson((previousState) => {\n//       return {\n//         ...previousState,\n//         age: 45,\n//       };\n//     });\n//   };\n//   // spread the previous state values and update the age to 45\n//   const [person, setPerson] = useState(obj);\n//   return (\n//     <div>\n//       <h1>{person.name}</h1>\n//       <h1>{person.age}</h1>\n//       <h1>{person.height}</h1>\n//       <h1>{person.isYoung.toString()}</h1>\n//       <button onClick={changeState}>Change</button>\n//     </div>\n//   );\n// };\n\n// export default Temp1;\n\n// const Temp1 = () => {\n//   let num = [10, 20, 30, 40];\n//   let [numbers, setNumbers] = useState(num);\n\n//   let changeList = () => {\n//     setNumbers((previousState) => {\n//       return [...previousState, Math.floor(Math.random() * 50)];\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <ul>\n//         {numbers.map((n, i) => (\n//           <li key={i}>{n}</li>\n//         ))}\n//       </ul>\n//       <button onClick={changeList}>Change</button>\n//     </div>\n//   );\n// };\n\n// export default Temp1;\n\n// Hooks: 1. useState()\n// 2. useEffect()  is used to produce some side effects.. like bringing data from an api or resource.. useEffect runs either with every rendering of the component or every change in a state variable OR only once...\n//  useEffect(()=>{},[]);  ONLY ONCE\n//  useEffect(()=>{}); With every re-rendering\n//  useEffect(()=>{},[num]) With every change in num state variable...\n\nimport { useState, useEffect } from \"react\";\n\n// const Temp1 = () => {\n//   const [count, setCount] = useState(0);\n\n//   useEffect(() => {\n//     setTimeout(() => {\n//       setCount((count) => count + 1);\n//     }, 1000);\n//   }, []);\n\n//   return <h1>The count is renderd {count} times!</h1>;\n// };\n\n// export default Temp1;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Temp1 = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const res = await fetch(\"https://reqres.in/api/users\");\n      const data = await res.json();\n      console.log(data);\n      setUsers(data.data);\n    };\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(Temp1, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = Temp1;\nexport default Temp1;\nvar _c;\n$RefreshReg$(_c, \"Temp1\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Temp1","_s","users","setUsers","fetchUsers","res","fetch","data","json","console","log","children","map","user","email","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/noman/OneDrive - Keyin College/Fall2023/ProgrammingJavaScript/Lectures/Week10/tasktracker/src/components/Temp1.jsx"],"sourcesContent":["// Hooks!\r\n// Hooks represent the state of a component...what are the values in a particular component at a particular time.\r\n// 1. useState() hook...\r\n\r\n// import { useState } from \"react\";\r\n\r\n// const Temp1 = () => {\r\n//   const [x, setX] = useState(\"Keyin\");\r\n//   const [num, setNum] = useState(0);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>{x}</h1>\r\n//       <h1>{num}</h1>\r\n//       <button\r\n//         onClick={() => {\r\n//           setX(\"College\");\r\n\r\n//           setNum(num + 5);\r\n//         }}\r\n//       >\r\n//         Change\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Temp1;\r\n\r\n// const Temp1 = () => {\r\n//   const [name, setName] = useState(\"Alan Smith\");\r\n\r\n//   let changeState = () => {\r\n//     setName(\"Bob Smith\");\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <h1>{name}</h1>\r\n//       <button onClick={changeState}>Update</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Temp1;\r\n\r\n// const Temp1 = () => {\r\n//   const obj = {\r\n//     name: \"Alan Smith\",\r\n//     age: 29,\r\n//     height: 5.33,\r\n//     isYoung: true,\r\n//   };\r\n\r\n// let changeState = () => {\r\n//   setPerson({\r\n//     name: \"Bob Smith\",\r\n//     age: 45,\r\n//     height: 5.4,\r\n//     isYoung: false,\r\n//   });\r\n// };\r\n\r\n// let changeState = () => {\r\n//   setPerson({\r\n//     name: \"Bob Smith\",\r\n//   });\r\n// };\r\n\r\n//   let changeState = () => {\r\n//     setPerson((previousState) => {\r\n//       return {\r\n//         ...previousState,\r\n//         age: 45,\r\n//       };\r\n//     });\r\n//   };\r\n//   // spread the previous state values and update the age to 45\r\n//   const [person, setPerson] = useState(obj);\r\n//   return (\r\n//     <div>\r\n//       <h1>{person.name}</h1>\r\n//       <h1>{person.age}</h1>\r\n//       <h1>{person.height}</h1>\r\n//       <h1>{person.isYoung.toString()}</h1>\r\n//       <button onClick={changeState}>Change</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Temp1;\r\n\r\n// const Temp1 = () => {\r\n//   let num = [10, 20, 30, 40];\r\n//   let [numbers, setNumbers] = useState(num);\r\n\r\n//   let changeList = () => {\r\n//     setNumbers((previousState) => {\r\n//       return [...previousState, Math.floor(Math.random() * 50)];\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <ul>\r\n//         {numbers.map((n, i) => (\r\n//           <li key={i}>{n}</li>\r\n//         ))}\r\n//       </ul>\r\n//       <button onClick={changeList}>Change</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Temp1;\r\n\r\n// Hooks: 1. useState()\r\n// 2. useEffect()  is used to produce some side effects.. like bringing data from an api or resource.. useEffect runs either with every rendering of the component or every change in a state variable OR only once...\r\n//  useEffect(()=>{},[]);  ONLY ONCE\r\n//  useEffect(()=>{}); With every re-rendering\r\n//  useEffect(()=>{},[num]) With every change in num state variable...\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// const Temp1 = () => {\r\n//   const [count, setCount] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     setTimeout(() => {\r\n//       setCount((count) => count + 1);\r\n//     }, 1000);\r\n//   }, []);\r\n\r\n//   return <h1>The count is renderd {count} times!</h1>;\r\n// };\r\n\r\n// export default Temp1;\r\n\r\nconst Temp1 = () => {\r\n  const [users, setUsers] = useState([]);\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const res = await fetch(\"https://reqres.in/api/users\");\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUsers(data.data);\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {users.map((user) => (\r\n        <h1>{user.email}</h1>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Temp1;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtCC,SAAS,CAAC,MAAM;IACd,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MACtD,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBJ,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC;IACrB,CAAC;IAEDH,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,EACGT,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACdd,OAAA;MAAAY,QAAA,EAAKE,IAAI,CAACC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CApBID,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAsBX,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}