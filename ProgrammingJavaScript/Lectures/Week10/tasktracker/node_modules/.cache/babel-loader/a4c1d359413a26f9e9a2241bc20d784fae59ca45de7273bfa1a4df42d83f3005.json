{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noman\\\\OneDrive - Keyin College\\\\Fall2023\\\\ProgrammingJavaScript\\\\Lectures\\\\Week10\\\\tasktracker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport Temp1 from \"./components/Temp1\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"School appointment\",\n    day: \"November 10 at 1pm\",\n    reminder: true\n  }, {\n    id: 2,\n    text: \"GYM\",\n    day: \"November 15 at 10pm\",\n    reminder: false\n  }, {\n    id: 3,\n    text: \"Meeting\",\n    day: \"December 10 at 3 pm\",\n    reminder: true\n  }]);\n  // to make state variable global and transerferable to ANY component we put them in App.js...\n  // tasks is now a state variable with initial value set to an array []... and we can use setTasks to change the state of tasks -VA\n\n  const deleteTask = id => {\n    // console.log(\"delete\", id);\n    // filter funciton will filter all the tasks...leaving out the task with the id.. given in paramter...\n    setTasks(tasks.filter(task => task.id != id));\n  };\n  const toggleReminder = id => {\n    // console.log(\"hello\", id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : \"No tasks to show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BRPUAeEcmpUxplH8253ojYv6CSc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Header","Tasks","Temp1","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","id","text","day","reminder","deleteTask","filter","task","toggleReminder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onDelete","onToggle","_c","$RefreshReg$"],"sources":["C:/Users/noman/OneDrive - Keyin College/Fall2023/ProgrammingJavaScript/Lectures/Week10/tasktracker/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport Temp1 from \"./components/Temp1\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"School appointment\",\n      day: \"November 10 at 1pm\",\n      reminder: true,\n    },\n    { id: 2, text: \"GYM\", day: \"November 15 at 10pm\", reminder: false },\n    { id: 3, text: \"Meeting\", day: \"December 10 at 3 pm\", reminder: true },\n  ]);\n  // to make state variable global and transerferable to ANY component we put them in App.js...\n  // tasks is now a state variable with initial value set to an array []... and we can use setTasks to change the state of tasks -VA\n\n  const deleteTask = (id) => {\n    // console.log(\"delete\", id);\n    // filter funciton will filter all the tasks...leaving out the task with the id.. given in paramter...\n    setTasks(tasks.filter((task) => task.id != id));\n  };\n\n  const toggleReminder = (id) => {\n    // console.log(\"hello\", id);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header />\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No tasks to show\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CACjC;IACEO,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,oBAAoB;IAC1BC,GAAG,EAAE,oBAAoB;IACzBC,QAAQ,EAAE;EACZ,CAAC,EACD;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE,qBAAqB;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACnE;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,GAAG,EAAE,qBAAqB;IAAEC,QAAQ,EAAE;EAAK,CAAC,CACvE,CAAC;EACF;EACA;;EAEA,MAAMC,UAAU,GAAIJ,EAAE,IAAK;IACzB;IACA;IACAD,QAAQ,CAACD,KAAK,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAE,IAAIA,EAAE,CAAC,CAAC;EACjD,CAAC;EAED,MAAMO,cAAc,GAAIP,EAAE,IAAK;IAC7B;EAAA,CACD;EAED,oBACEL,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBd,OAAA,CAACL,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACTf,KAAK,CAACgB,MAAM,GAAG,CAAC,gBACfnB,OAAA,CAACJ,KAAK;MAACO,KAAK,EAAEA,KAAM;MAACiB,QAAQ,EAAEX,UAAW;MAACY,QAAQ,EAAET;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAEvE,kBACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CAlCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}